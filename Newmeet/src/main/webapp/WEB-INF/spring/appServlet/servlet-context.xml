<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/static/**" location="/static/" />
	<resources mapping="/uploadfile/**" location="/uploadfile/" />
	<resources mapping="/bootstrap/**" location="/bootstrap/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일업로드에 필요한 bean -->
   <!-- Multipart 지원 기능을 사용하려면 MultipartResolver를 스프링 설정 파일에 등록 -->
   <!-- Commons FileUpload API 를 이용해서 Multipart를 처리해 준다. -->
   <beans:bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="defaultEncoding">
         <beans:value>utf-8</beans:value>
      </beans:property>
   </beans:bean>
   
   <!-- JDBC설정 -->
   <beans:bean id="dataSource"
      class="org.apache.commons.dbcp2.BasicDataSource"
      p:driverClassName="com.mysql.cj.jdbc.Driver"
      p:url="jdbc:mysql://newmeet-rds.cx5njm1y6puv.ap-northeast-2.rds.amazonaws.com/newMeet_RDS?characterEncoding=utf8&amp;serverTimezone=UTC"
      p:username="admin" p:password="bitcamp123" />

   <beans:bean id="jdbcTemplate"
      class="org.springframework.jdbc.core.JdbcTemplate"
      p:dataSource-ref="dataSource" />
   
   <!-- my batis 설정  : datasoruce, mapper-->
   <!-- 서버 실행시 기준의 경로 -->
   <beans:bean id="sqlSessionFactory"
            class="org.mybatis.spring.SqlSessionFactoryBean"
            p:dataSource-ref="dataSource"
            p:mapperLocations="/WEB-INF/mappers/*.xml"         
   />
   
   <beans:bean id="sqlSession"
            class="org.mybatis.spring.SqlSessionTemplate">
      <beans:constructor-arg index="0" ref="sqlSessionFactory"/>
   </beans:bean>

   <!-- PlatformTransactionManager 빈 설정 -->
   <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />
   
   <!-- @Transactional 애노테이션 활성화 설정 -->
   <tx:annotation-driven transaction-manager="transactionManager" />
	
	
	<context:component-scan base-package="com.xy.nm" />
	
	
	
</beans:beans>
